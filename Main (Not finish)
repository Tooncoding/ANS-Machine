/*TABLE OF CONTENT
  // * 1. Chair detection (Ultrasonic_Underchair)
  // * 2. Confirmation Light (Light_on/Light_off) (Ultrasonic_Onthetable)(AC light dimmer)
  // * 3. Welcome sentence (OLED display)
  // * 4. Time setting (Ultrasonic_Onthetable)
  // * 5. Music Selector (DFPlayer Mini MP3 Player Module)
  // * 6. Fan (Motor driver)
  // * 7. Checkpoint game (Ultrasonic_Onthetable) (Discuss about loop with toon)
  // * 8. Vending Machine (Motor driver)
*/
//********************************************************************************************************************//
//--------------------------------------------------------------------------------------------------------------------//
//----------------------------------Initialize the value for each function:-------------------------------------------//
//--------------------------------------------------------------------------------------------------------------------//
//********************************************************************************************************************//


// * 1. Chair detection (Ultrasonic_Underchair)
int Chairdet_Ultra_TrigPin = ??;
int Chairdet_Ultra_EchoPin = ??;

// * 2. Confirmation Light (Light_on/Light_off) (Ultrasonic_Onthetable)(AC light dimmer)
#include <RBDdimmer.h>
#define USE_SERIAL  Serial
#define outputPin  0
#define zerocross  0
dimmerLamp dimmer(outputPin); //initialase port for dimmer for MEGA, Leonardo, UNO, Arduino M0, Arduino Zero
int Intensity = 0;

// * 3. Welcome sentence (OLED display)
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for SSD1306 display connected using software SPI (default case):
#define OLED_MOSI   11
#define OLED_CLK   13
#define OLED_DC    7
#define OLED_CS    10
#define OLED_RESET 8
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT,
                         OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
#define NUMFLAKES     10 // Number of snowflakes in the animation example

// * 4. Time setting (Ultrasonic_Onthetable)
int Onthetable_TrigPin = ??;
int Onthetable_EchoPin = ??;

// * 5. Music Selector (DFPlayer Mini MP3 Player Module)
#include "Arduino.h"
#include "SoftwareSerial.h"
#include "DFRobotDFPlayerMini.h"
SoftwareSerial mySoftwareSerial(10, 11); // RX, TX
DFRobotDFPlayerMini myDFPlayer;
void printDetail(uint8_t type, int value);

// * 6. Fan (Motor driver - Port Left)
int EN_FAN = ??;
int IN1_FAN = ??;
int IN2_FAN = ??;

// * 7. Checkpoint game (Ultrasonic_Onthetable)
int CheckPoint_Ultra_trigPin = ??;
int CheckPoint_Ultra_echoPin = ??;
int score = 0;
int answer[8] = {1, 2, 1, 3, 3, 2, 4, 1};

// * 8. Vending Machine (Motor driver - Port Right)
int EN_VM = ??;
int IN3_VM = ??;
int IN4_VM = ??;


//********************************************************************************************************************//
//--------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------Set up-------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------------------//
//********************************************************************************************************************//

void setup() {
  // * 1. Chair detection (Ultrasonic_Underchair)---------------------------------------------------------
  pinMode(Chairdet_Ultra_TrigPin, OUTPUT);
  pinMode(Chairdet_Ultra_EchoPin, INPUT);
  
  // * 2. Confirmation Light (Light_on/Light_off) (Ultrasonic_Onthetable)(AC light dimmer)----------------
  USE_SERIAL.begin(9600);
  dimmer.begin(NORMAL_MODE, ON); //dimmer initialisation: name.begin(MODE, STATE)
  
  // * 3. Welcome sentence (OLED display)------------------------------------------------------------------
  //Screen setup
  Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Don't proceed, loop forever
  }

  delay(2000);
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 10);
  // Display static text
  delay(5000);
  display.clearDisplay();

  display.println(" hi,");
  display.display();
  delay(5000);

  
  // * 4. Time setting (Ultrasonic_Onthetable)---------------------------------------------------------------
  pinMode(Onthetable_TrigPin, OUTPUT);
  pinMode(Onthetable_EchoPin, INPUT);

  
  // * 5. Music Selector (DFPlayer Mini MP3 Player Module)--------------------------------------------------
  mySoftwareSerial.begin(9600);
  Serial.begin(115200);
  if (!myDFPlayer.begin(mySoftwareSerial)) {  //Use softwareSerial to communicate with mp3.
    Serial.println(F("Unable to begin:"));
    Serial.println(F("1.Please recheck the connection!"));
    Serial.println(F("2.Please insert the SD card!"));
    while (true);
  }
  myDFPlayer.setTimeOut(500); //Set serial communictaion time out 500ms
  //----Set volume----
  myDFPlayer.volume(30);  //Set volume value (0~30).
  myDFPlayer.volumeUp(); //Volume Up
  myDFPlayer.volumeDown(); //Volume Down

  //----Set different EQ----
  myDFPlayer.EQ(DFPLAYER_EQ_NORMAL);
  //  myDFPlayer.EQ(DFPLAYER_EQ_POP);
  //  myDFPlayer.EQ(DFPLAYER_EQ_ROCK);
  //  myDFPlayer.EQ(DFPLAYER_EQ_JAZZ);
  //  myDFPlayer.EQ(DFPLAYER_EQ_CLASSIC);
  //  myDFPlayer.EQ(DFPLAYER_EQ_BASS);

  //----Set device we use SD as default----
  //  myDFPlayer.outputDevice(DFPLAYER_DEVICE_U_DISK);
  myDFPlayer.outputDevice(DFPLAYER_DEVICE_SD);
  //  myDFPlayer.outputDevice(DFPLAYER_DEVICE_AUX);
  //  myDFPlayer.outputDevice(DFPLAYER_DEVICE_SLEEP);
  //  myDFPlayer.outputDevice(DFPLAYER_DEVICE_FLASH);

  //----Mp3 control----
  //  myDFPlayer.sleep();     //sleep
  //  myDFPlayer.reset();     //Reset the module
  //  myDFPlayer.enableDAC();  //Enable On-chip DAC
  //  myDFPlayer.disableDAC();  //Disable On-chip DAC
  //  myDFPlayer.outputSetting(true, 15); //output setting, enable the output and set the gain to 15

  //----Mp3 play----
  myDFPlayer.next();  //Play next mp3
  delay(1000);
  myDFPlayer.previous();  //Play previous mp3
  delay(1000);
  myDFPlayer.play(1);  //Play the first mp3
  delay(1000);
  myDFPlayer.loop(1);  //Loop the first mp3
  delay(1000);
  myDFPlayer.pause();  //pause the mp3
  delay(1000);
  myDFPlayer.start();  //start the mp3 from the pause
  delay(1000);
  myDFPlayer.playFolder(15, 4);  //play specific mp3 in SD:/15/004.mp3; Folder Name(1~99); File Name(1~255)
  delay(1000);
  myDFPlayer.enableLoopAll(); //loop all mp3 files.
  delay(1000);
  myDFPlayer.disableLoopAll(); //stop loop all mp3 files.
  delay(1000);
  myDFPlayer.playMp3Folder(4); //play specific mp3 in SD:/MP3/0004.mp3; File Name(0~65535)
  delay(1000);
  myDFPlayer.advertise(3); //advertise specific mp3 in SD:/ADVERT/0003.mp3; File Name(0~65535)
  delay(1000);
  myDFPlayer.stopAdvertise(); //stop advertise
  delay(1000);
  myDFPlayer.playLargeFolder(2, 999); //play specific mp3 in SD:/02/004.mp3; Folder Name(1~10); File Name(1~1000)
  delay(1000);
  myDFPlayer.loopFolder(5); //loop all mp3 files in folder SD:/05.
  delay(1000);
  myDFPlayer.randomAll(); //Random play all the mp3.
  delay(1000);
  myDFPlayer.enableLoop(); //enable loop.
  delay(1000);
  myDFPlayer.disableLoop(); //disable loop.
  delay(1000);

    //----Read imformation----
  Serial.println(myDFPlayer.readState()); //read mp3 state
  Serial.println(myDFPlayer.readVolume()); //read current volume
  Serial.println(myDFPlayer.readEQ()); //read EQ setting
  Serial.println(myDFPlayer.readFileCounts()); //read all file counts in SD card
  Serial.println(myDFPlayer.readCurrentFileNumber()); //read current play file number
  Serial.println(myDFPlayer.readFileCountsInFolder(3)); //read file counts in folder SD:/03
  
  // * 6. Fan (Motor driver)----------------------------------------------------------------------------------------------------
  pinMode(EN_FAN, OUTPUT);
  pinMode(IN1_FAN, OUTPUT);
  pinMode(IN2_FAN, OUTPUT);
  
  // * 7. Checkpoint game (Ultrasonic_Onthetable)--------------------------------------------------------------------------------
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  Serial.begin(9600);
  
  // * 8. Vending Machine (Motor driver)
  pinMode(EN_VM, OUTPUT);
  pinMode(IN3_VM, OUTPUT);
  pinMode(IN4_VM, OUTPUT);
}


//********************************************************************************************************************//
//--------------------------------------------------------------------------------------------------------------------//
//----------------------------------------------------Function--------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------------------//
//********************************************************************************************************************//

/*TABLE OF CONTENT
  // * 1. Chair detection (Ultrasonic_Underchair)
  // * 2. Turn Light on/offs (Light_on/Light_off) (Ultrasonic_Onthetable)(AC light dimmer)
  // * 3. Welcome sentence (OLED display) (Ultrasonic_Onthetable)
  // * 4. Welcome sound 
  // * 5. Music Selector (DFPlayer Mini MP3 Player Module)
  // * 6. Fan (Motor driver)
  // * 7. Checkpoint game (Ultrasonic_Onthetable) (Discuss about loop with toon)
  // * 8. Vending Machine (Motor driver)

/*TABLE FOR FUNCTION
   Light_on //Hardware
   Light_off //Hardware
   Music //Hardware
   int Read() //Hardware
   int SelectABCD() 
   int quickSelectABCD() 
   void checkpoint()
   void Crack_code()
   void swipe()
   void fill_in_blank()
   void snack(float ReadingTime) ////Hardware
*/

//********************************************************************************************************************//
// * 1. Chair detection (Ultrasonic_Underchair)-----------------------------------------------------------------------//


int Chair_det() {
  long duration, distance, newdistance;
  long tempo;
  long limit = 20;
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = (duration/2) / 29.41;
  
  while (true){
    tempo = distance;
//    Serial.print(tempo);
//    Serial.println("tempo cm");
    delay(500);
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    newdistance = (duration/2) / 29.41;
//    Serial.print(newdistance);
//    Serial.println("new cm");
    
    if (abs(newdistance-tempo) > limit){
      Serial.println("Activate");
      return 1;
      
      break;
    }
   }
   Serial.println("----------");
    
}}


//********************************************************************************************************************//
// * 2. Light_on/Light_off

void Light_on() {
  Intensity = map(650, 1, 1024, 100, 0); // analogRead(analog_pin), min_analog, max_analog, 100%, 0%);
  USE_SERIAL.println(Intensity);
  dimmer.setPower(Intensity); // 100%
}
void Light_off() {
  Intensity = map(0, 1, 1024, 100, 0); // analogRead(analog_pin), min_analog, max_analog, 100%, 0%);
  USE_SERIAL.println(Intensity);
  dimmer.setPower(Intensity); // 0%
}



//********************************************************************************************************************//
// * 3. Welcome sentence (OLED display)

void Welcome() {
  // put your main code here, to run repeatedly:
  long distance = Read();
  //Add on here
  display.println("Welcome to ANS!!");
  display.display();
  display.println("be prepare for the productive study");
  display.display();
  delay(1000);
  display.clearDisplay();
  

  delay(700);
  display.setCursor(0, 0);
  display.println("Instructions:");
  display.println("");
  display.display();
  delay(500);
  display.println("Move your hand to the zone for 3s to select your choice");
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();

  //conditions
  display.setCursor(0, 0);
  display.println("Are you ready ?");
  display.display();
  delay(3000);
  display.println("A) yes");
  display.println("C) no");
  display.display();
  SelectYN();
  delay(3000);

  //conditions
  display.clearDisplay();
  display.display();
  delay(3000);
  display.setCursor(0, 0);
  display.println("Choose your study time :");
  display.display();
  delay(3000);
  display.println("A) 0.5 hrs");
  display.println("B) 1.0 hrs");
  display.println("C) 1.5 hrs");
  display.println("D) 2.0 hrs");
  display.display();
  SelectABCD();
  delay(3000);



//********************************************************************************************************************//
//--------------------------------------------------------------------------------------------------------------------//
//------------------------------------------------------Main----------------------------------------------------------//
//--------------------------------------------------------------------------------------------------------------------//
//********************************************************************************************************************//




void loop() {
  
int activate = Chair_det(); //detect chair

if (activate ==1){
  Light_on();  //turn on light
  Welcome();   //welcome massage
  
  
}







//********************************************************************************************************************//
// * 2. Confirmation Light (Light_on/Light_off) (Ultrasonic_Onthetable)(AC light dimmer)


//********************************************************************************************************************//
// * 3. Welcome sentence (OLED display)







}
