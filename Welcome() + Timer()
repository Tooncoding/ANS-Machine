//https://drive.google.com/file/d/1mh5Sv4jg_myZc_Cm7RNAVcbjuQA-Yg_U/view?usp=sharing


//------ultrasonic
int trigPin = 5;
int echoPin = 4;
int score = 0;

//------screen
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for SSD1306 display connected using software SPI (default case):
#define OLED_MOSI   11
#define OLED_CLK   13
#define OLED_DC    7
#define OLED_CS    10
#define OLED_RESET 8
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT,
  OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

#define NUMFLAKES     10 // Number of snowflakes in the animation example

//------rtc

#include <RTClib.h>
#include <Wire.h>
#include <TimeLib.h>

RTC_DS1307 RTC;
 
unsigned long LastUnSyncTime = 0;

time_t time_provider()
{
    return RTC.now().unixtime();  
}



void setup() {

//Ultrasonic setup
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  Serial.begin(9600);

//Screen setup
  Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

  delay(2000);
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 10);
  // Display static text
  delay(5000);
  display.clearDisplay();
  
  display.println(F(" hi,"));
  display.display();
  delay(5000);

//rtc setup
  Serial.begin(9600);
  Wire.begin();  //sets up the I2C
  RTC.begin();   //initializes the I2C to the RTC
  
  //  Set the RTC Time to 5:10:30 Nov 3 2020
  RTC.adjust(DateTime(2020,12,3,0,00,00));
}



 


int Read() {
  int duration, distance;
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = (duration / 2) / 29.41;
  Serial.print(distance);
  Serial.println(" cm");
  return distance;
  //Range 0-250
}


int SelectABCD() {
  int Answer ; //A=1, B=2, C=3 and D=4
  delay(100);
  boolean AlreadyAnswer = false;
  while (AlreadyAnswer == false) {
    int distance = Read();
    int check1 = 0;
    int check2 = 0;
    int check3 = 0;
    int check4 = 0;
    delay(500);
    for(int freeze1 = 0; freeze1 < 3; freeze1 ++){
      if (distance < 10) {
        Answer = 1;
        check1 += 1;
      }
      else if (distance > 10 and distance < 20) {
        Answer = 2;
        check2 += 1;
  
      }
      else if (distance > 20 and distance < 30) {
        Answer = 3;
        check3 += 1;
  
      }
      else if (distance > 30 and distance < 40) {
        Answer = 4;
        check4 += 1;
  
      }
      delay(500);
    }
    if(check1 == 3){
      display.println(F("A"));
      display.display();
      AlreadyAnswer = true;
    }
    else if (check2 == 3){
      display.println(F("B"));
      display.display();
      AlreadyAnswer = true;
    }
    else if (check3 == 3){
      display.println(F("C"));
      display.display();
      AlreadyAnswer = true;
    }
    else if (check4 == 3){
      display.println(F("D"));
      display.display();
      AlreadyAnswer = true;
    }
  }

  return Answer;
}

int Sure() {
  display.println(F("Are you sure ?"));
  display.display();
  delay(3000);
  display.println(F("A) yes"));
  display.println(F("C) no"));
  display.display();
  int Answer ; //Yes=1, No=0
  boolean AlreadyAnswer = false;
  int check1 = 0;
  int check2 = 0;
  while (AlreadyAnswer == false) {
    int distance = Read();
    // for loop is used to make sure users want to select that choice
    for(int freeze = 0; freeze < 3; freeze ++){
      if (distance < 20) {
        Answer = 1;//YES
        check1 += 1;
      }
      else if (distance > 20 and distance < 40) {
        Answer = 0;//NO
        check2 += 1;
      }
    delay(800);
    }
    if(check1 == 3){
      display.println(F("YES"));
      display.display();
      delay(1000);

      display.clearDisplay();
      display.display();
      display.setCursor(0, 10);
      display.println(F("Good Bye ;-;"));
      display.display();
      AlreadyAnswer = true;
    }
    else if(check2 == 3){
      display.println(F("NO"));
      display.display();
      delay(500);
      Sure();
      AlreadyAnswer = true;
    }
  }
  
  
}

int SelectYN() {
  int Answer ; //Yes=1, No=0
  boolean AlreadyAnswer = false;
  int check1 = 0;
  int check2 = 0;
  while (AlreadyAnswer == false) {
    int distance = Read();
    // for loop is used to make sure users want to select that choice
    for(int freeze = 0; freeze < 3; freeze ++){
      if (distance < 20) {
        Answer = 1;//YES
        check1 += 1;
      }
      else if (distance > 20 and distance < 40) {
        Answer = 0;//NO
        check2 += 1;
      }
    delay(500);
    }
    if(check1 == 3){
      display.println(F("YES"));
      display.display();
      AlreadyAnswer = true;
    }
    else if(check2 == 3){
      display.println(F("NO"));
      display.display();
      delay(500);
      Sure();
      AlreadyAnswer = true;
    }
  }

  return Answer;
}


int Welcome() {
  // put your main code here, to run repeatedly:
  long distance = Read();
  //Add on here
  display.setCursor(0, 0);
  display.clearDisplay();
  display.println(F("Welcome to ANS!!"));
  display.display();
  delay(1000);
  display.println(F("be prepare for the productive study"));
  display.display();
  delay(2000);
  display.clearDisplay();
  
  display.setCursor(0, 0);
  display.println(F("Instructions:"));
  display.println(F(""));
  display.display();
  delay(1000);
  display.println(F("Move your hand to the zone for 3s to select your choice"));
  display.display();
  delay(3000);
  display.clearDisplay();
  display.display();

  //conditions
  display.setCursor(0, 0);
  display.println(F("Are you ready ?"));
  display.display();
  delay(1000);
  display.println(F("A) yes"));
  display.println(F("C) no"));
  display.display();
  delay(500);
  SelectYN();
  delay(3000);

  //conditions
  display.clearDisplay();
  display.display();

  display.setCursor(0, 0);
  display.println(F("Choose your study time :"));
  display.display();
  delay(1000);
  display.println(F("A) 1.0 hrs"));
  display.println(F("B) 2.0 hrs"));
  display.println(F("C) 3.0 hrs"));
  display.println(F("D) 10 mins"));
  display.display();
  delay(500);
  int StudyTime = SelectABCD(); //1=A=10 mins //2=B=1.0hrs //3=C=2.0 hrs //4=D=3.0 hrs
  delay(4000);
  return StudyTime;

}


void timer(int hour_chosen, int min_chosen, int sec_chosen) {
  //printchosen time
  display.clearDisplay();
  display.setCursor(0, 0);
  display.println(F("The schosen time is :"));
  display.println(F(""));
  display.display();
  display.print(hour_chosen);
  display.println(F(" hrs, "));
  display.print(min_chosen);
  display.println(F(" mins, "));
  display.println(sec_chosen);
  display.println(F(" sec"));
  display.display();
  delay(4000);

  display.clearDisplay();
  display.setCursor(0, 0);
  display.println(F("study session start"));
  display.println(F("in..."));
  display.display();
  delay(2000);
  display.println(F("3"));
  display.display();
  delay(1000);
  display.println(F("2"));
  display.display();
  delay(1000);
  display.print(F("1"));
  display.display();
  delay(1000);
  display.clearDisplay();
  display.setCursor(0, 10);
  display.println(F("fighting ngub <3"));
  display.display();
  delay(5000);
  display.clearDisplay();
  
  RTC.adjust(DateTime(2020,12,3,0,00,00));
  
  while (true) {
    DateTime now = RTC.now();  //  Creating now object every loop?
   
    int hour_now = now.hour();
    int min_now = now.minute();
    int sec_now = now.second();
    
    //Print RTC time
    Serial.println("----------");
    Serial.print("now.hour:   ");
    Serial.println(hour_now);
    Serial.print("now.minute: ");
    Serial.println(min_now);
    Serial.print("now.second: ");
    Serial.println(sec_now);

    delay(2000);
    
  
    if (hour_chosen == hour_now and min_chosen == min_now and sec_chosen == sec_now){
      Serial.println("It's been 30 minutes");
      Serial.println("You made it to the first check point !");
      RTC.adjust(DateTime(2020,11,3,0,00,00));
      break;
  
    
    }}}


//*******************main*********************//



void loop() {
  Serial.println(F("Move your hand to the zone for 3s."));
  Serial.println(F("to select your choice"));
  
  int StudyTime = Welcome();
  Serial.print(F("chosen time : "));
  Serial.println(StudyTime);

  int hour_chosen;
  int min_chosen;
  int sec_chosen;

  //real time
  if (StudyTime != 4){
    hour_chosen = StudyTime;
    min_chosen = 0;
    sec_chosen = 0;
  } 
  else{
    hour_chosen = 0;
    min_chosen = 0;
    sec_chosen = 10;
  }

  timer(hour_chosen, min_chosen, sec_chosen);
  
  delay(1000);

  



}
